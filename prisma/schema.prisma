// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}



model Profile {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  clerkId String? 
  name String?
  email String?
  imageUrl String 
  content String?

  groupIds String[] @db.ObjectId
  

  secretId String? @db.ObjectId

  setupGroup Boolean?
  setupProfile Boolean?
  setupComplete Boolean?
 

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
}

model Group {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  creator String @db.ObjectId
  imageUrl String
  name String
  openGroup Boolean?
  inviteCode String @unique
  profileIds String[]
  threadIds String[]

  autoEvents Boolean?
  openThreads Boolean?
 

  secretIds String[] @db.ObjectId

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Creator {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  groupIds String[] @db.ObjectId
  name String?
  imageUrl String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


// IN PROGRESS

model Event {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String?
  type String
  profileIds String[] @db.ObjectId

 
  tasks Task[]


  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  startTime DateTime
  endTime DateTime

}

model Task {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String?


  eventId String? @db.ObjectId
  event Event? @relation(fields:[eventId], references: [id])

  startTime DateTime 
  endTime DateTime 

  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Post {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  profileId String @db.ObjectId
  threadId String @db.ObjectId
  
  content String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Thread {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  title String
  starter String @db.ObjectId
  content String
  imageUrl String?
  profileIds String[] @db.ObjectId
  openThread Boolean?
  groupId String?
  groupName String?

  postIds String[] @db.ObjectId

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum GroupRole {
  CREATOR
  MANAGER
  COORDINATOR
  MEMBER
}